npm i express dotenv _ to install both express and dotenv
can change the "main" as "server.js" in "package.json" file

need to restart server after 
    changing .env file or package.json file

use require('dotenv').config() _ to use .env file

"type": "module", in package.json to use ES6 import syntax
    import express from 'express' _ instead of const express = require('express')

when using ES6 import syntax, we need to add file extension in path
    import { registerController } from "../controllers/authController.js"; instead of
    import { registerController } from "../controllers/authController";

adding middlewares between route and controller
    router.get("/test", requireSignIn, isAdmin, testController); 

inside context file, we have set axios default headers
    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;
    axios.defaults.headers.common["Authorization"] = auth?.token;

auth?.token === optional chaining

inside .env file, a string value need not be in quotes

Libraries/ dependencies used (npmjs.com)
concurrently, axios, react-toastify, react-helmet (), react-icons 

"client": "npm start --prefix ./client ", adding a prefix to run npm start in client folder
"dev": "concurrently \"npm run server\" \"npm run client\""

all the pages are wrapped in Layout component, so that there can be a common header and footer in all the pages

<form onSubmit={}> ||  not <form onClick={}> 
function inside onClick should be called as onClick={() => {}} ======= inside a callback function

uesEffect() is used to reload the page when the state/ dependencies change 

Always remember to return the response after sending it, otherwise the server will crash
Always remember to console.log() the error in catch block, to identify the error

Remember to use 'await' with mongoose functions, as they return a promise

category: {
      type: mongoose.ObjectId,
      ref: "Category",          // linking a document of one collection to a document of another collection
      required: true,
    },

used antDesign for UI components
    Select, Modal

useParams can be used to get the id from the url, in Frontend React 
    const { id } = useParams();

const products = await productModel.findByIdAndUpdate(
      req.params.pid,
      { ...req.fields, slug: slugify(name) },
      { new: true }     // to get the updated document not the old one
    );

.find({
        category: cid,
        _id: { $ne: pid },      // to get all the products except the one with id = pid
      })
we are doing  filtering & pagination in the backend, so that the frontend can get the data in chunks
    it can be done on client side also


=============================== Solve this doubt ===============================

How to stop the server from crashing after, the user is already registered and we send a post request
same for accessing createCategoryController when category already exists
    === solved by wrapping res.send() with return statement 

AdminRoute _ Spinner _ login ===== how is the path, location being passed

outlet? allows nesting?
how is requireSignIn and isAdmin working in the code?

some error in logging in, if you don't type the correct password in first attempt

how is the category id linked with the product document?

formidable() & fs module used 

.populate() method?
FormData() method?
.substring method
await productModel.find({}).estimatedDocumentCount();

problem in updateController the switch case is not working properly
doubt in productFiltersController, how is the args set?
while filtering, if that filter have no products, don't show 'Load more' button
load more not working with filter applied
    === solved by setting the skip value to 0, when the filter is applied

How is mongoose used
    post body
    get params
    find() method
    findByIdAndUpdate() method
    findOne()
    findOneAndDelete()

problem in fetching products if that category has no product, fetches all products

don't understand anything about search component
    used regex 

return total.toLocaleString("en-US", {
        style: "currency",
        currency: "USD",
      });

moment library for time
    moment().format("MMMM Do YYYY, h:mm:ss a"); 
in objectModel
    products: [{ type: mongoose.ObjectId, ref: "Product" }],    // how is this surrounded in array brackets
    enum?

using serve

at 4:35, adding filename because we used es6 module
also see how to deploy a fullstack on vercel